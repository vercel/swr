name: Test and Release

on:
  push:
    branches:
      - main
    tags:
      - v*
  pull_request:

jobs:
  install:
    runs-on: ubuntu-latest
    steps:
    - name: Setup pnpm
      uses: pnpm/action-setup@v2.2.4

    - name: Use Node.js 18
      uses: actions/setup-node@v3
      with:
        version: 7
        node-version: 18
        cache: pnpm
        registry-url: 'https://registry.npmjs.org'

    - name: Get pnpm store directory
      id: pnpm-cache
      shell: bash
      run: |
        echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

    - uses: actions/cache@v3
      name: Setup pnpm cache
      with:
        path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
        key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
        restore-keys: |
          ${{ runner.os }}-pnpm-store-

    - name: Install Dependencies
      shell: bash
      run: |
        corepack enable
        pnpm install

  test:
    runs-on: ubuntu-latest
    needs: [install]
    steps:
      - uses: actions/checkout@v3

      - name: Lint and test
        run: |
          pnpm run-all-checks
          pnpm clean
          pnpm build
          pnpm test-packaging
  e2e:
    runs-on: ubuntu-latest
    needs: [install]
    steps:
      - uses: actions/checkout@v3

      - name: Install Playwright
        run: npx playwright install --with-deps chromium

      - name: E2E Tests
        run: |
          pnpm clean
          pnpm build
          pnpm build:e2e
          pnpm test:e2e
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: playwright-report
          path: playwright-report

  release:
    runs-on: ubuntu-latest
    needs: [test, e2e]
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - uses: actions/checkout@v3

      - name: Release
        run: pnpm publish --access public --no-git-checks
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN_ELEVATED }}
